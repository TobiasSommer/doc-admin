<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="genericinterface-layers">
    <title>一般インターフェース・レイヤー</title>
    <para>
        一般インターフェースは柔軟で、かつカスタマイズするのが簡単になるようにレイヤー・モデルに基づいた構造である。
    </para>
    <para>
        レイヤーは1セットのファイルである。それは、一般インターフェースがウェブサービスの異なる部分をどのように行なうかコントロールします。正しい構成を使用すると、一つは新規モジュールを作成せずに、異なる外部システムのために異なるウェブサービスを構成することができます。
    </para>
    <note>
        <para>
            遠隔のシステムが一般インターフェースの現在の束ねられたモジュールを支援しない場合、その特定のウェブサービスのために特別のモジュールを開発している必要がある。
        </para>
        <para>
            OTRS出荷時に提供される一般インタフェース・モジュールのリストは今後更新され増加していくでしょう。
        </para>
    </note>
    <para>
        <figure>
            <title>The graphical interface layers</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-layers.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
    </para>

    <section>
        <title>ネットワーク・トランスポート</title>
        <para>
            このレイヤーは遠隔のシステムとの正確なコミュニケーションに責任を持ちます。依頼を受け取り、供給者として働く場合、レスポンスを生成し、依頼者として働く場合、依頼および受信応答を生成します。
        </para>
        <para>
            供給者コミュニケーションは「nphgenericinterface.pl」と呼ばれる新規ウェブサーバによって取り扱われます。
        </para>
        <para>
            Requester communication could be initiated during an event triggered by a
Generic Interface module or any other OTRS module. This event is catched by
the event handler and depending on the configuration the event will be
processed directly by the requester object or delegated to the Scheduler (a
separated daemon designed to process tasks asynchronously).
        </para>
    </section>

    <section>
        <title>データマッピング</title>
        <para>
            このレイヤーは、データ構造とOTRSそしてリモートシステムの間の翻訳について責任を持ちます(データ内部およびデータ外部層)。通常遠隔のシステムはOTRS(異なる値およびそれらの値の名前を含む)とは異なっているデータ構造を持っています。そしてここに受信情報を「OTRSが理解する何かへと変更するレイヤーの重要性が存在します。また、逆にデータ辞書を使うリモートシステムへの送信情報についてもです。
        </para>
        <para>
            <remark>例:</remark>「優先度」(OTRS)は遠隔のシステムでの「Prio」と呼ばれるかもしれません。また、それは、値「1
低」(OTRS)が遠隔のシステムについての「情報」にマッピングされるべきです。
        </para>
    </section>

    <section>
    <title>コントローラー</title>
        <para>
            コントローラーは同様のオペレーションあるいは依頼アクション(Invokers)の集合です。例えば、チケット・コントローラーはいくつかの標準チケット・オペレーションを含んでいます。カスタム・コントローラは実装可能です。例えば「チケット外部会社」コントローラーは標準チケット・コントローラーと同様の機能を含みます。しかし異なるデータ・インターフェイスまたは機能名（リモート・システム機能名に適応する）または異なるコードを完成します。
        </para>
        <para>
            一般インターフェースのための1つのアプリケーションは、同じ種類のもう一つのリモートシステムと話すことだけができるようなリモートシステムと情報を同期できるようになります。この場合、新規コントローラーは開発される必要があります。そして、オペレーションと依頼アクション(Invokers)は、リモートシステムの振る舞いをエミュレートしなければいけません。その振る舞いは、OTRSが提供するインターフェイスがリモートシステムのインターフェイスと同様です。
        </para>
    </section>

    <section>
        <title>オペレーション(供給者としてのOTRS)</title>
        <para>
            オペレーションはOTRSの内に行なうことができる単一の行為です。オペレーションにはすべて同じプログラミングインターフェースがあります、それらは1つの特定のパラメタへデータを受け取り、成功ステータス、潜在的なエラーメッセージおよび返るデータを持ったデータ構造を返します。
        </para>
        <para>
            通常、オペレーションは、コアモジュールを呼び出すために、すでにマップされたデータ（内部）を使います。そしてOTRSでアクション（チケット作成、ユーザー更新、キューの無効か、通知送信）を実行します。オペレーションはアクションを実行するOTRS
APIへのフルの権限を持っています。
        </para>
    </section>

    <section>
        <title>依頼アクション (依頼者としてのOTRS)</title>
        <para>
            依頼アクション（Invokers）とは、OTRSがリモートシステムに対して行うアクションのことです。依頼アクション(Invokers)は、リクエストを作成する必要とされる情報を処理し収集するためにOTRSコア・モジュールを使用します。情報が準備ができている場合、リモート・システムに送るためにリモート・システムのフォーマットにそれをマッピングしなければなりません。それはアクションを実行する情報を処理し、成功を処理するためか、エラーを取り扱うためのいずれかのために返答を送信します。　
        </para>
    </section>
</section>
