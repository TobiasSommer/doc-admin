<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="email">
<title>Sending/Receiving Emails</title>

<section id="email-sending">
<title>Sending Emails</title>

<section id="email-sending-sendmail">
<title>Via Sendmail (Default)</title>

<para>
OTRS can send out emails via <ulink
url="http://www.sendmail.org/">Sendmail</ulink>, <ulink
url="http://www.postfix.org/">Postfix</ulink>, <ulink
url="http://www.qmail.org">Qmail</ulink> or <ulink
url="http://www.exim.org">Exim</ulink>. The default configuration is to use
Sendmail and should work out-of-the-box.
</para>

<para>
You can configure the sendmail settings via the graphical configuration
frontend (<literal>Framework::Core::Sendmail</literal>)
</para>

</section>

<section id="email-sending-smtp">
<title>Via SMTP Server or Smarthost</title>

<para>
OTRS может посылать письма через SMTP (<ulink
url="http://www.ietf.org/rfc/rfc821.txt">Simple Mail Transfer Protocol / RFC
821</ulink>) или Secure SMTP.
</para>

<para>
The SMTP server settings can be configured via the SysConfig
(<literal>Framework::Core::Sendmail</literal>). If you don't see SMTPS
available as an option, the required Perl modules are missing. In that case,
please refer to <link linkend="installation-of-perl-modules">"Installation
of Perl modules required for OTRS"</link> for instructions.
</para>

</section>

</section>

<section id="email-receiving">
<title>Receiving Emails</title>

<section id="email-receiving-pop3">
<title>Mail Accounts Configured via the OTRS GUI</title>

<para>
OTRS is able to receive emails from POP3, POP3S, IMAP and IMAPS mail
accounts.
</para>

<para>
Configure your mail accounts via the "PostMaster Mail Accounts" link on the
Admin page.
</para>

<para>
If a new mail account is to be created (see figure below), then its mail
server name, login name and password must be specified. Also, you need to
select the mail server type, which can be POP3, POP3S, IMAP or IMAPS. If you
don't see your server type available as an option, the required Perl modules
are missing on your system. In that case, please refer to <link
linkend="installation-of-perl-modules"> "Installation of Perl modules
required for OTRS"</link> for instructions.</para>

<para>
<figure>
    <title>Добавление учетной записи электронной почты</title>
<screenshot>
<graphic fileref="screenshots/administration/email/add-mailaccount.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
</para>

<para>Если для опции "Trusted" выбрано значение "Да", будут оцениваться и
выполнятся любые X-OTRS-заголовки, присоединенные к входящему
сообщению. Поскольку X-OTRS-заголовок может выполнять некоторые действия в
системе обработки заявок, то для извесных отправителей опцию Trusted нужно
установить только в значение Да. X-OTRS-заголовки используюся в OTRS <link
linkend="adminarea-postmasterfilter"> модулем фильтрации </link>. Более
подробно X-OTRS заголовки рассматриваются в <link
linkend="table-of-x-otrs-headers">этой таблице</link>. Любые созданные и
выполненные правила фильтрации независимы от параметров настроки Trusted.
</para>

<para>
Можно контролировать распределением входящих сообщений, если они должны
сортироваться по очередям или содержимому поля "Кому". Если для
Диспетчеризации выбрана опция "Диспетчеризация по выбранной очереди", то все
входящие сообщения будут отсортированы в указанной очереди. В таком случае
адрес, с которого отправили сообщение не учитывается. Если для
диспетчеризации выбрана опция "Диспетчеризация писем по полю Кому", система
для входящих писем проверяет, связана ли эта очередь с адресом электронной
почты в поле Кому. Перейдя по ссылке <link
linkend="adminarea-emailaddresses">Управление E-mail-адресами</link> в
Панели Администрирования, можно связать определенный адрес с очередью. Если
не найдено никакой связи между адресом в поле "Кому" то сообщение будет
сохранятся в системе в очереди "Raw" , которая задана в <link
linkend="ConfigReference_Ticket:Core::PostMaster:PostmasterDefaultQueue">
PostmasterDefaultQueue </link> по умолчанию после установки системы.
</para>

<para>
All data for the mail accounts are saved in the OTRS database. The
<filename>bin/otrs.Console.pl Maint::PostMaster::MailAccountFetch</filename>
command uses the settings in the database and fetches the mail. You can
execute it manually to check if all your mail settings are working properly.
</para>

<para>
On a normal installation, the mail will be fetched every 10 minutes by the
OTRS Daemon.
</para>

<note>
<para>
При получении почты OTRS удаляет почту с POP или IMAP сервера. Нету такой
опции,  которая бы позволяла хранить копию сообщения на сервере. Если вы все
же хотите чтобы такая возможность присутствовала, скорей всего нужно
воспользоваться правилами переадресации на почтовый сервер. Оратитесь
пожалуйста к документации по вашему почтовому серверу.
</para>
</note>
</section>


<section id="email-receiving-cmd">
<title>Via Command Line Program and Procmail (<filename>otrs.Console.pl
Maint::PostMaster::Read</filename>)</title>

<para>
If you cannot use mail accounts to get the email into OTRS, the command line
program <filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename>
might be a way around the problem. It takes the mails via STDIN and pipes
them directly into OTRS. That means email will be available in your OTRS
system if the MDA (mail delivery agent, e.g. procmail) executes this
program.
</para>

<para>
To test <filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename>
without an MDA, execute the command of the following script.
</para>

<para>
<screen>
linux:/opt/otrs# cd bin
linux:/opt/otrs/bin# cat ../doc/sample_mails/test-email-1.box | ./otrs.Console.pl Maint::PostMaster::Read
linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>Сценарий: Тестирование PostMaster без MDA.</emphasis>
</para>

<para>
Если сообщения электронной почты отображаются в QueueView, значит вашы
настройки работают.
</para>

<example id='procmail-queue-routing'>

<title>Routing via Procmail Using <filename>otrs.Console.pl</filename></title>

<para>
In order to route mails in a specific queue using
<filename>otrs.Console.pl</filename> use the following example.
</para>

<para>
<screen><![CDATA[
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read --target-queue=QUEUENAME
]]></screen>
</para>

<para>
When sorting to a subqueue, you must separate the parent and child queue
with a <literal>::</literal>.
</para>

<para>
<screen><![CDATA[
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read --target-queue=QUEUENAME::SUBQUEUE
]]></screen>
</para>

</example>

<para>
Procmail - это очень распостраненный фильтр электронной почты в среде
Linux.  Он устанавливается на большинстве систем. Если нет, перейдите по
ссылке <ulink url="http://www.procmail.org/"><citetitle>procmail
homepage</citetitle></ulink>.
</para>

<para>
Для настройки procmail для OTRS (требуется сконфигурированный транспортный
агент MTA, например sendmail, postfix, exim or qmail), используйте файл
<filename>~otrs/.procmailrc.dist</filename>, скопируйте его в
<filename>.procmailrc</filename> а затем добавьте строки из нижеприведенного
сценария.
</para>

<para>
<programlisting>
SYS_HOME=$HOME
PATH=/bin:/usr/bin:/usr/local/bin
# --
# Pipe all email into the PostMaster process.
# --
:0 :
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read
</programlisting>
</para>

<para>
<emphasis>Сценарий: Настройка procmail для OTRS.</emphasis>
</para>

<para>
All email sent to the local OTRS user will be piped into
<filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename> and then
shown in your QueueView.
</para>

</section>

<section id="email-receiving-fetchmail">
<title>Fetching emails via POP3 or IMAP and fetchmail for <filename>otrs.Console.pl
Maint::PostMaster::Read</filename></title>

<para>
In order to get email from your mail server, via a POP3 or IMAP mailbox, to
the OTRS machine/local OTRS account and to procmail, use <ulink
url="http://www.fetchmail.info/">fetchmail</ulink>.
</para>

<note>
<para>
Работающий и сконфигурированный SMTP необходим для работы OTRS.
</para>
</note>

<para>
You can use the <filename>.fetchmailrc.dist</filename> in the home directory
of OTRS and copy it to <filename>.fetchmailrc</filename>. Modfiy/change it
for your needs (see the Example below).
</para>

<example id='fetchmailrc'>
<title><literal>.fetchmailrc</literal></title>

<para>
<programlisting>
#poll (mailserver) protocol POP3 user (user) password (password) is (localuser)
poll mail.example.com protocol POP3 user joe password mama is otrs
</programlisting>
</para>

</example>

<para>
Don't forget to set the <filename>.fetchmailrc</filename> to 710
(<command>chmod 710 .fetchmailrc</command>)!
</para>

<para>
With the <filename>.fetchmailrc</filename> from the Example above, all email
will be forwarded to the local OTRS account, if the command
<command>fetchmail -a</command> is executed. Set up a cronjob with this
command if you want to fetch the mails regularly.
</para>
</section>


<section id="email-receiving-filter">
<title>Filtering/Dispatching by OTRS/PostMaster Modules (for More Complex
Dispatching)</title>

<para>
If you use the <filename>bin/otrs.Console.pl
Maint::PostMaster::Read</filename> or <filename>bin/otrs.Console.pl
Maint::PostMaster::MailAccountFetch</filename> method, you can insert or
modify X-OTRS header entries with the PostMaster filter modules. With the
X-OTRS headers, the ticket system can execute some actions on incoming
mails, sort them into a specific queue, change the priority or change the
customer ID, for example. More information about the X-OTRS headers are
available in the section about <link
linkend="adminarea-postmasterpop3-account">adding mail accounts</link> from
the OTRS Admin page.
</para>

<para>
Есть некоторые предустановленные модули фильтрации:
</para>

<note>
<para>
Название задания (например
$Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'JobName'}) должно быть
уникальным!
</para>
</note>

<para>
<literal>Kernel::System::PostMaster::Filter::Match</literal> is a default
module to match on some email header (e.g. From, To, Subject, ...). It can
set new email headers (e.g. X-OTRS-Ignore: yes or X-OTRS-Queue: spam) if a
filter rule matches. The jobs of the Example below can be inserted in
<filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-match-example'>
<title>Example jobs for the filter module
<literal>Kernel::System::PostMaster::Filter::Match</literal></title>

<para>
<programlisting>
    # Job Name: 1-Match
    # (block/ignore all spam email with From: noreply@)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'1-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            From =&gt; 'noreply@',
        },
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
    # Job Name: 2-Match
    # (sort emails with From: sales@example.com and Subject: **ORDER**
    # into queue 'Order')
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'2-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            To =&gt; 'sales@example.com',
            Subject =&gt; '**ORDER**',
        },
        Set =&gt; {
            'X-OTRS-Queue' =&gt; 'Order',
        },
    };
</programlisting>
</para>

</example>

<para>
<literal>Kernel::System::PostMaster::Filter::CMD</literal> is a default
module to pipe the email into an external command. The output is given to
STDOUT and if the result is true, then set new email header
(e.g. X-OTRS-Ignore: yes or X-OTRS-Queue: spam). The Example below can be
used in <filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-cmd-example'>
<title>Пример задания для модуля фильтрации Kernel::System::PostMaster::Filter::CMD</title>

<para>
<programlisting>
    # Job Name: 5-SpamAssassin
    # (SpamAssassin example setup, ignore spam emails)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'5-SpamAssassin'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::CMD',
        CMD =&gt; '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
</programlisting>
</para>

</example>

<para>
    <literal>Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition</literal>
is a default module that adds the possibility to parse external identifiers,
in the email subject, the body or both using regular expressions. It then
stores this value in a defined dynamic field. When an email comes in, OTRS
will first search for an external identifier and when it finds one, query
OTRS on the pre-defined dynamic field. If it finds an existing ticket, it
will update this ticket, otherwise it will create a new ticket with the
external reference number in the separate field.
</para>
<para>
    OTRS SysConfig already provide 4 different settings to setup different
external ticket numbers.  If more settings are needed they need to be added
manually. The following example can be used in
<filename>Kernel/Config.pm</filename> to extend SysConfig settings.
</para>

<example id='filter-module-externalticketrecognition-example'>
    <title>
        Example job for the filter module
<literal>Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition</literal>
    </title>

<programlisting language="Perl"><![CDATA[
    # Job Name: ExternalTicketNumberRecognition
    # External Ticket Number Reconition, check for Incident-<number> in incoming mails subject and
    # body from the addeesses <sender>@externalticket.com, if number is found it will be stored in
    # the dynamic field 'ExternalNumber' (that need to be setup in the Admin Panel).
    $Self->{'PostMaster::PreFilterModule'}->{'000-ExternalTicketNumberRecognition'} = {
        'FromAddressRegExp' => '\\s*@externalticket.com',
        'NumberRegExp'      => 'Incident-(\\d.*)',
        'SearchInSubject'   => '1',
        'SearchInBody'      => '1',
        'TicketStateTypes'  => 'new;open'
        'DynamicFieldName'  => 'ExternalNumber',
        'Module'            => 'Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition',
        'Name'              => 'Test External Ticket Number',
        'SenderType'        => 'system',
    };
    ]]></programlisting></example>

<itemizedlist mark="round">
    <para><emphasis>Параметры конфигурации</emphasis></para>
    <listitem>
        <para>FromAddressRegExp</para>
        <para>
            Это настройка необязательна. Только писма с заданным значением поля "From:"
будут рассмотрены этим фильтром. Вы можете изменить эту настройку  на адрес
отправителя вашей внешней системы, используемой для исходящей почты. В
случае, если адреса различны, вы можете оставить этот параметр пустым. Тогда
OTRS не будет проверять адрес отправителя.
        </para>
    </listitem>
    <listitem>
        <para>NumberRegExp</para>
        <para>
            Этот параметр обязателен. Он содержит регулярное выражение, которое OTRS
будет использовать для извлечения номера заявки из темы и/или тела
письма. Выражение по умолчанию будет проверять соответствие, например,
'Incident-12354' и помещать часть значения между скобками в динамическое
поле, в данном случае '12354'.
        </para>
    </listitem>
    <listitem>
        <para>SearchInSubject</para>
        <para>Если установлено в '1', в поле Тема письма будет осуществляться поиск номера
заявки.</para>
    </listitem>
    <listitem>
        <para>SearchInBody</para>
        <para>Если установлено в '1', поиск номера заявки будет осуществляться в тексте
письма.</para>
    </listitem>
    <listitem>
        <para>TicketStateTypes</para>
        <para>
            Это необязательный параметр. Если задан, OTRS будет искать отерытые внешние
заявки с заданными типами состояний. Типы состояний в списке разделяются
точкой с запятой.
        </para>
    </listitem>
    <listitem>
        <para>DynamicField</para>
        <para>
            Обязательный параметр. Задает динамическое поле, используемое для хранения
внешнего номера заявки (имя поля должно существовать в системе и быть
действительным).
        </para>
    </listitem>
    <listitem>
        <para>SenderType</para>
        <para>Этот параметр задает тип отправителя и используется при создании
сообщений/заметок в OTRS.</para>
    </listitem>
</itemizedlist>

<para>
Конечно, также есть возможность разработки своих собственных
PostMaster-модулей фильтрации.
</para>

</section>

<section id="email-filter-troubleshooting">
    <title>Troubleshooting Email Filtering</title>
    <para>This section shows some common issues and things to consider when
troubleshooting Postmaster filters.</para>
    <itemizedlist>
        <listitem>
            <para>The filters are worked in order of their alphabetically sorted filter
names. The last filter wins for a certain field to be set, when the criteria
match twice.</para>
        </listitem>
        <listitem>
            <para>"Stop After Match" can prevent a second match.</para>
        </listitem>
        <listitem>
            <para>Make sure the regular expression is valid.</para>
        </listitem>
        <listitem>
            <para>Headers can be set as to control OTRS, but are not written in the mail
itself.</para>
        </listitem>
        <listitem>
            <para>When matching one From, CC, TO, use EMAILADDRESS: &lt;your@address&gt;</para>
        </listitem>
        <listitem>
            <para>The Mailbox must be trusted.</para>
        </listitem>
        <listitem>
            <para>The match criteria are AND conditions.</para>
        </listitem>
        <listitem>
            <para>Ticket properties can not be matched by the postmaster filter.</para>
        </listitem>
    </itemizedlist>
</section>

</section>

</section>
