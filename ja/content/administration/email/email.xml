<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="email">
<title>Sending/Receiving Emails</title>

<section id="email-sending">
<title>Sending Emails</title>

<section id="email-sending-sendmail">
<title>Via Sendmail (Default)</title>

<para>
OTRS can send out emails via <ulink
url="http://www.sendmail.org/">Sendmail</ulink>, <ulink
url="http://www.postfix.org/">Postfix</ulink>, <ulink
url="http://www.qmail.org">Qmail</ulink> or <ulink
url="http://www.exim.org">Exim</ulink>. The default configuration is to use
Sendmail and should work out-of-the-box.
</para>

<para>
You can configure the sendmail settings via the graphical configuration
frontend (<literal>Framework::Core::Sendmail</literal>)
</para>

</section>

<section id="email-sending-smtp">
<title>Via SMTP Server or Smarthost</title>

<para>
OTRS can send emails via SMTP (<ulink
url="http://www.ietf.org/rfc/rfc821.txt">Simple Mail Transfer Protocol / RFC
821</ulink>) or Secure SMTP.
</para>

<para>
The SMTP server settings can be configured via the SysConfig
(<literal>Framework::Core::Sendmail</literal>). If you don't see SMTPS
available as an option, the required Perl modules are missing. In that case,
please refer to <link linkend="installation-of-perl-modules">"Installation
of Perl modules required for OTRS"</link> for instructions.
</para>

</section>

</section>

<section id="email-receiving">
<title>Receiving Emails</title>

<section id="email-receiving-pop3">
<title>Mail Accounts Configured via the OTRS GUI</title>

<para>
OTRS is able to receive emails from POP3, POP3S, IMAP and IMAPS mail
accounts.
</para>

<para>
Configure your mail accounts via the "PostMaster Mail Accounts" link on the
Admin page.
</para>

<para>
If a new mail account is to be created (see figure below), then its mail
server name, login name and password must be specified. Also, you need to
select the mail server type, which can be POP3, POP3S, IMAP or IMAPS. If you
don't see your server type available as an option, the required Perl modules
are missing on your system. In that case, please refer to <link
linkend="installation-of-perl-modules"> "Installation of Perl modules
required for OTRS"</link> for instructions.</para>

<para>
<figure>
    <title>メールアカウントの追加。</title>
<screenshot>
<graphic fileref="screenshots/administration/email/add-mailaccount.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
</para>

<para>信頼済オプションの値にYesを選べば、受信メッセージに付けられたどんなX-OTRSヘッダーも評価され実行されます。X-OTRSヘッダーがチケットシステムの中のいくつかのアクションを実行することができるので既知の送信者だけに信頼済オプションをYesにセットするべきです。X-OTRSヘッダーはOTRSでは<link
linkend="adminarea-postmasterfilter">フィルタ・モジュール</link>によって使用されます。X-OTRSヘッダーは、<link
linkend="table-of-x-otrs-headers">このテーブルの中で</link>より詳細に説明されます。作成されたどんなpostmasterフィルタ規則も、信頼されたオプションのセッティングに関係なく実行されます。
</para>

<para>
The distribution of incoming messages can be controlled if they need to be
sorted by queue or by the content of the "To:" field. For the Dispatching
field, if "Dispatching by selected queue" is selected, all incoming messages
will be sorted into the specified queue. The address where the mail was sent
to is disregarded in this case. If "Dispatching by email To: field" is
selected, the system checks if a queue is linked with the address in the To:
field of the incoming mail. You can link an address to a queue in the <link
linkend="adminarea-emailaddresses">E-mail address management</link> section
of the Admin page. If the address in the To: field is linked with a queue,
the new message will be sorted into the linked queue. If no link is found
between the address in the To: field and any queue, then the message flows
into the "Raw" queue in the system, which is the <link
linkend="ConfigReference_Ticket:Core::PostMaster:PostmasterDefaultQueue">PostmasterDefaultQueue</link>
after a default installation.
</para>

<para>
All data for the mail accounts are saved in the OTRS database. The
<filename>bin/otrs.Console.pl Maint::PostMaster::MailAccountFetch</filename>
command uses the settings in the database and fetches the mail. You can
execute it manually to check if all your mail settings are working properly.
</para>

<para>
On a normal installation, the mail will be fetched every 10 minutes by the
OTRS Daemon.
</para>

<note>
<para>
メールを取って来る場合、OTRSはPOPかIMAPサーバーからメールを削除します。さらにサーバ上でコピーを保存するオプションはありません。サーバのコピーを保持したければ、メールサーバで転送規則を作成するとよいでしょう。詳細のためにメールサーバ・ドキュメンテーションを調べてください。
</para>
</note>
</section>


<section id="email-receiving-cmd">
<title>Via Command Line Program and Procmail (<filename>otrs.Console.pl
Maint::PostMaster::Read</filename>)</title>

<para>
If you cannot use mail accounts to get the email into OTRS, the command line
program <filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename>
might be a way around the problem. It takes the mails via STDIN and pipes
them directly into OTRS. That means email will be available in your OTRS
system if the MDA (mail delivery agent, e.g. procmail) executes this
program.
</para>

<para>
To test <filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename>
without an MDA, execute the command of the following script.
</para>

<para>
<screen>
linux:/opt/otrs# cd bin
linux:/opt/otrs/bin# cat ../doc/sample_mails/test-email-1.box | ./otrs.Console.pl Maint::PostMaster::Read
linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>スクリプト:MDAのないポストマスターのテスト</emphasis>
</para>

<para>
EメールがQueueViewの中で表示される場合、あなたの設定は正しく動作しています。
</para>

<example id='procmail-queue-routing'>

<title>Routing via Procmail Using <filename>otrs.Console.pl</filename></title>

<para>
In order to route mails in a specific queue using
<filename>otrs.Console.pl</filename> use the following example.
</para>

<para>
<screen><![CDATA[
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read --target-queue=QUEUENAME
]]></screen>
</para>

<para>
When sorting to a subqueue, you must separate the parent and child queue
with a <literal>::</literal>.
</para>

<para>
<screen><![CDATA[
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read --target-queue=QUEUENAME::SUBQUEUE
]]></screen>
</para>

</example>

<para>
ProcmailはLinux環境中でとても普及しているEメール・フィルタです。ほとんどのシステムにそれがインストールされます。そうでなければ、<ulink
url="http://www.procmail.org/"><citetitle>procmailホームページ</citetitle></ulink>を見てください。
</para>

<para>
OTRS用にprocmailを構成するためには(sendmail、postfix、eximあるいはqmailといったprocmail構成のMTAに基づいた）、<filename>~otrs/.procmailrc.dist</filename>ファイルを使用して、<filename>.procmailrc</filename>にそれをコピーして、スクリプトのラインを下に加えてください。
</para>

<para>
<programlisting>
SYS_HOME=$HOME
PATH=/bin:/usr/bin:/usr/local/bin
# --
# Pipe all email into the PostMaster process.
# --
:0 :
| $SYS_HOME/bin/otrs.Console.pl Maint::PostMaster::Read
</programlisting>
</para>

<para>
<emphasis>スクリプト:OTRSのためのprocmailの構成。</emphasis>
</para>

<para>
All email sent to the local OTRS user will be piped into
<filename>bin/otrs.Console.pl Maint::PostMaster::Read</filename> and then
shown in your QueueView.
</para>

</section>

<section id="email-receiving-fetchmail">
<title>Fetching emails via POP3 or IMAP and fetchmail for <filename>otrs.Console.pl
Maint::PostMaster::Read</filename></title>

<para>
In order to get email from your mail server, via a POP3 or IMAP mailbox, to
the OTRS machine/local OTRS account and to procmail, use <ulink
url="http://www.fetchmail.info/">fetchmail</ulink>.
</para>

<note>
<para>
OTRSマシン上で作動してるSMTP構成が必要です。
</para>
</note>

<para>
You can use the <filename>.fetchmailrc.dist</filename> in the home directory
of OTRS and copy it to <filename>.fetchmailrc</filename>. Modfiy/change it
for your needs (see the Example below).
</para>

<example id='fetchmailrc'>
<title><literal>.fetchmailrc</literal></title>

<para>
<programlisting>
#poll (mailserver) protocol POP3 user (user) password (password) is(localuser)
poll mail.example.com protocol POP3 user joe password mama is otrs
</programlisting>
</para>

</example>

<para>
Don't forget to set the <filename>.fetchmailrc</filename> to 710
(<command>chmod 710 .fetchmailrc</command>)!
</para>

<para>
With the <filename>.fetchmailrc</filename> from the Example above, all email
will be forwarded to the local OTRS account, if the command
<command>fetchmail -a</command> is executed. Set up a cronjob with this
command if you want to fetch the mails regularly.
</para>
</section>


<section id="email-receiving-filter">
<title>Filtering/Dispatching by OTRS/PostMaster Modules (for More Complex
Dispatching)</title>

<para>
If you use the <filename>bin/otrs.Console.pl
Maint::PostMaster::Read</filename> or <filename>bin/otrs.Console.pl
Maint::PostMaster::MailAccountFetch</filename> method, you can insert or
modify X-OTRS header entries with the PostMaster filter modules. With the
X-OTRS headers, the ticket system can execute some actions on incoming
mails, sort them into a specific queue, change the priority or change the
customer ID, for example. More information about the X-OTRS headers are
available in the section about <link
linkend="adminarea-postmasterpop3-account">adding mail accounts</link> from
the OTRS Admin page.
</para>

<para>
いくつかのデフォルト・フィルタ・モジュールがあります:
</para>

<note>
<para>
ジョブ名 (e.g. $Self->{'PostMaster::PreFilterModule'}->{'JobName'})
はユニークである必要があります。
</para>
</note>

<para>
<literal>Kernel::System::PostMaster::Filter::Match</literal> is a default
module to match on some email header (e.g. From, To, Subject, ...). It can
set new email headers (e.g. X-OTRS-Ignore: yes or X-OTRS-Queue: spam) if a
filter rule matches. The jobs of the Example below can be inserted in
<filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-match-example'>
<title>Example jobs for the filter module
<literal>Kernel::System::PostMaster::Filter::Match</literal></title>

<para>
<programlisting>
    # Job Name: 1-Match
    # (noreply@からの全てのスパムEメールをブロックまたは無視)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'1-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            From =&gt; 'noreply@',
        },
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
    # Job Name: 2-Match
    # (件名: **ORDER**かつsales@example.comからのEメールをソート)
    # into queue 'Order')
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'2-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            To =&gt; 'sales@example.com',
            Subject =&gt; '**ORDER**',
        },
        Set =&gt; {
            'X-OTRS-Queue' =&gt; 'Order',
        },
    };
</programlisting>
</para>

</example>

<para>
<literal>Kernel::System::PostMaster::Filter::CMD</literal> is a default
module to pipe the email into an external command. The output is given to
STDOUT and if the result is true, then set new email header
(e.g. X-OTRS-Ignore: yes or X-OTRS-Queue: spam). The Example below can be
used in <filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-cmd-example'>
<title>フィルタ・モジュールのためのサンプル・ジョブ　Kernel::System::PostMaster::Filter::CMD</title>

<para>
<programlisting>
    # Job Name: 5-SpamAssassin
    # (SpamAssassin サンプルセットアップ, スパムメールを無視します)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'5-SpamAssassin'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::CMD',
        CMD =&gt; '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
</programlisting>
</para>

</example>

<para>
    <literal>Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition</literal>
is a default module that adds the possibility to parse external identifiers,
in the email subject, the body or both using regular expressions. It then
stores this value in a defined dynamic field. When an email comes in, OTRS
will first search for an external identifier and when it finds one, query
OTRS on the pre-defined dynamic field. If it finds an existing ticket, it
will update this ticket, otherwise it will create a new ticket with the
external reference number in the separate field.
</para>
<para>
    OTRS SysConfig already provide 4 different settings to setup different
external ticket numbers.  If more settings are needed they need to be added
manually. The following example can be used in
<filename>Kernel/Config.pm</filename> to extend SysConfig settings.
</para>

<example id='filter-module-externalticketrecognition-example'>
    <title>
        Example job for the filter module
<literal>Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition</literal>
    </title>

<programlisting language="Perl"><![CDATA[
    # Job Name: ExternalTicketNumberRecognition
    # External Ticket Number Reconition, check for Incident-<number> in incoming mails subject and
    # body from the addeesses <sender>@externalticket.com, if number is found it will be stored in
    # the dynamic field 'ExternalNumber' (that need to be setup in the Admin Panel).
    $Self->{'PostMaster::PreFilterModule'}->{'000-ExternalTicketNumberRecognition'} = {
        'FromAddressRegExp' => '\\s*@externalticket.com',
        'NumberRegExp'      => 'Incident-(\\d.*)',
        'SearchInSubject'   => '1',
        'SearchInBody'      => '1',
        'TicketStateTypes'  => 'new;open'
        'DynamicFieldName'  => 'ExternalNumber',
        'Module'            => 'Kernel::System::PostMaster::Filter::ExternalTicketNumberRecognition',
        'Name'              => 'Test External Ticket Number',
        'SenderType'        => 'system',
    };
    ]]></programlisting></example>

<itemizedlist mark="round">
    <para><emphasis>構成オプション</emphasis></para>
    <listitem>
        <para>FromAddressRegExp</para>
        <para>
            これはオプションの設定です。この「From:」アドレスと一致しているメールだけがこのフィルターで考慮されます。この設定を調整して、送信メール用外部システム利用を、送信者アドレスにすることができます。このアドレスが異なる場合、このオプションを空にすることができます。この場合、OTRSは送信者アドレスをチェックしません。
        </para>
    </listitem>
    <listitem>
        <para>NumberRegExp</para>
        <para>
            これは必須設定項目です。この設定は　件名またはチケットの本文からチケット番号を抽出するためにOTRSが使う正規表現を含みます。デフォルトの正規表現は　以下のような例の発生と一致するでしょう。例えば「Incident-12354」そしてその部分を動的フィールド中に括弧で挟む部分を置きます（ここでは「12354」）
        </para>
    </listitem>
    <listitem>
        <para>SearchInSubject</para>
        <para>これが「1」にセットされる場合、Eメール件名はチケット番号を求めて検索されます。</para>
    </listitem>
    <listitem>
        <para>SearchInBody</para>
        <para>これが「1」にセットされる場合、Eメール本文はチケット番号を求めて検索されます。</para>
    </listitem>
    <listitem>
        <para>TicketStateTypes（チケット・状態・タイプ）</para>
        <para>
            これはオプションの設定です。もし与えられれば、それは与えられた状態タイプの開いた外部チケットのみOTRSを検索するでしょう。状態タイプはセミコロンで分離されます。
        </para>
    </listitem>
    <listitem>
        <para>DynamicField</para>
        <para>
            これは必須の設定で、外部番号を保存するために使われている動的フィールドを定義します。(フィールド名はシステムに存在しなければいけないしかつ有効でなければなりません)
        </para>
    </listitem>
    <listitem>
        <para>SenderType</para>
        <para>これは、OTRSで記事作成に使用される送信者タイプを定義します。</para>
    </listitem>
</itemizedlist>

<para>
もちろん、自分のPostMasterフィルタ・モジュールを開発することも可能です。
</para>

</section>

<section id="email-filter-troubleshooting">
    <title>Troubleshooting Email Filtering</title>
    <para>This section shows some common issues and things to consider when
troubleshooting Postmaster filters.</para>
    <itemizedlist>
        <listitem>
            <para>The filters are worked in order of their alphabetically sorted filter
names. The last filter wins for a certain field to be set, when the criteria
match twice.</para>
        </listitem>
        <listitem>
            <para>"Stop After Match" can prevent a second match.</para>
        </listitem>
        <listitem>
            <para>Make sure the regular expression is valid.</para>
        </listitem>
        <listitem>
            <para>Headers can be set as to control OTRS, but are not written in the mail
itself.</para>
        </listitem>
        <listitem>
            <para>When matching one From, CC, TO, use EMAILADDRESS: &lt;your@address&gt;</para>
        </listitem>
        <listitem>
            <para>The Mailbox must be trusted.</para>
        </listitem>
        <listitem>
            <para>The match criteria are AND conditions.</para>
        </listitem>
        <listitem>
            <para>Ticket properties can not be matched by the postmaster filter.</para>
        </listitem>
    </itemizedlist>
</section>

</section>

</section>
