<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="performance-tuning">
    <title>Настройка Производительности</title>

    <abstract>
    <para>
    Ниже представлен перечень различных техник, которые можно использовать для
получения максимально возможной производительности системы OTRS: настройка,
кодирование, использование памяти и многое другое.
    </para>
    </abstract>

    <section id="performance-tuning-otrs">
        <title>OTRS</title>
        <para>
        Есть несколько возможных вариантов улучшения производительности OTRS.
        </para>

        <section id="performance-tuning-otrs-index">
            <title>TicketIndexModule</title>
            <para>
                There are two backend modules for the index for the ticket queue view:

                <itemizedlist>

                    <listitem>
                        <para>
                        Using <literal>Kernel::System::Ticket::IndexAccelerator::RuntimeDB</literal>
(default), generate each queue view on the fly from the ticket table. You
will not have performance trouble until you have about 60,000 open tickets
in your system.
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                        <literal>Kernel::System::Ticket::IndexAccelerator::StaticDB</literal>, the
most powerful module, should be used when you have above 80,000 open
tickets. It uses an extra ticket_index table, which works like a view. Use
<filename>bin/otrs.Console.pl Maint::Ticket::QueueIndexRebuild</filename>
for generating an initial index after switching backends.
                        </para>
                    </listitem>

                </itemizedlist>

                Вы можете изменить IndexAccelerator через SysConfig.
            </para>

        </section>

        <section id="performance-tuning-otrs-storage">
            <title>TicketStorageModule</title>
            <para>
            Существует два различных хранилица для хранения заявок/статей:
            </para>

            <para>
            <itemizedlist>

                <listitem>
                <para>
                Configure <literal>Kernel::System::Ticket::ArticleStorageDB</literal>
(default) to store attachments, etc., in the database. Note: Don't use it
with large setups.
                </para>
                <para>
                Pro: Если пользователь вашего веб-сервера не является пользователем 'otrs',
используйте этот модуль, чтобы избежать проблем с правами доступа.
                </para>
                <para>
                Противопоказания: Не совсем целесообразно хранить вложения в базе
данных. Будьте осторожны, при храненении больших объектов. Настройте
конфигурационный параметр MySQL "set-variable=max_allowed_packet=8M"  для
хранения объектов размером 8 MB (по умолчанию это 2M).
                </para>
                </listitem>

                <listitem>
                <para>
                Configure <literal>Kernel::System::Ticket::ArticleStorageFS</literal> to
store attachments etc. on the local file system. Note: Recommended for large
setups.
                </para>
                <para>
                Pro: Это быстро!
                </para>
                <para>
                Противопоказания: Пользователь веб-сервера должен быть пользователем
'otrs'. Кроме того, если у вас есть несколько серверов, нужно убедиться в
том, что файловая система разделяется между этими серверами. Так что
разместите его на общедоступный NFS-ресурс или предпочтительнее SAN, или
аналогичные решения.
                </para>
                </listitem>

            </itemizedlist>

            </para>

            <para>
                Note: you can switch from one back-end to the other on the fly. You can
switch the backend in the SysConfig, and then run the command line utility
<filename>bin/otrs.Console.pl Admin::Article::StorageSwitch</filename> to
put the articles from the database onto the filesystem or the other way
around. You can use the <emphasis>--target</emphasis> option to specify the
target backend. Please note that the entire process can take considerable
time to run, depending on the number of articles you have and the available
CPU power and/or network capacity.
            </para>

            <para>
                <screen><![CDATA[
shell> bin/otrs.Console.pl Admin::Article::StorageSwitch --target ArticleStorageFS
                ]]></screen> <emphasis>Script: Switching storage
back-ends from database to filesystem.</emphasis>
            </para>
            <para>
                If you want to keep old attachments in the database, you can activate the
SysConfig option <literal>Ticket::StorageModule::CheckAllBackends</literal>
to make sure OTRS will still find them.
            </para>
        </section>

        <section>
            <title>Архивирование Заявок</title>

            <para>
                Поскольку OTRS может использоваться в качестве системы аудита доказательств,
то удаление закрытых заявко не очень хорошая идея. Именно по этому мы
реализовали функцию архивирования заявок.
            </para>
            <para>
                Tickets that match certain criteria can be marked as "archived". These
tickets are not accessed if you do a regular ticket search or run a Generic
Agent job. The system itself does not have to deal with a huge amount of
tickets any longer as only the "latest" tickets are taken into consideration
when using OTRS. This can result in a huge performance gain on large
systems.
            </para>
            <para>
                Для использования функции архивации выполните следующие действия:
            </para>
            <orderedlist>
                <listitem>
                    <para>
                        Включение архивирование системы в SysConfig
                    </para>
                    <para>
                        В Панели Администрирования перейдите в SysConfig и выберите группу
<literal>Заявка</literal>. В <literal>Core::Ticket</literal> найдите опцию
<literal>Ticket::ArchiveSystem</literal>, по умолчанию установленную в
значение "нет". Измените значение этой настройки на "да" и сохраните
изменения.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Определение работы GenericAgent
                    </para>
                    <para>
                        В Панели Администратора выберите GenericAgent и добавьте новое задание
(работу). <orderedlist>
                            <listitem>
                                <para>
                                    Настройки Задания
                                </para>
                                <para>
                                    Введите имя для работы архивирования, и выберите надлежащие опции для
планирования этой работы.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Ticket Filter
                                </para>
                                <para>
                                    Фильтр заявок производит поиск заявок, которые отвечают выбраным
критериям. Хорошей идеей будет заархивировать закрытые заявки, которые были
закрыты за несколько месяцев до этого.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Действия над заявками
                                </para>
                                <para>
                                    В этой части установите поле "Архивировать выбранные заявки" в "архив
заявок".
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Сохранить работу
                                </para>
                                <para>
                                    В конце страницы у вас будет возможность сохранить работу (задание).
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Обработанные заявки
                                </para>
                                <para>
                                    Система отобразит все заявки, которые будут заархивированы при выполнении
задания Generic Agent-ом.
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Поиск Заявок
                    </para>
                    <para>
                        При поиске заявок, система по умолчанию производит поиск среди не
архивированных заявок. Установите критерий поиска "поиск в архивах", если
нужно чтобы поиск происходил также и в архивированых заявках.
                    </para>
                </listitem>
            </orderedlist>
        </section>
        <section id="performance-tuning-otrs-cache">
            <title>Кэш</title>
            <para>
                OTRS кэширует большое количество временных данных в
<filename>/opt/otrs/var/tmp</filename>. Убедитесь, что для этого
используется высокопроизводительная файловая система/хранилище. Если вы
располагаете достаточным количеством RAM, вы также можете попробовать
поместить эту папку в память, например: <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Console.pl Maint::Session::DeleteAll
shell> /opt/otrs/bin/otrs.Console.pl Maint::Cache::Delete
shell> sudo mount -o size=16G -t tmpfs none /opt/otrs/var/tmp

# add persistent mount point in /etc/fstab
                ]]></screen>
            </para>
            <note>
                <para>
                    Не забывайте, что это не постоянное хранилище, данные в котором будут
потеряны после перезагрузки сервера. Все ваши сеансы (если вы их храните в
файловой системе) и данные в кэше будут утрачены.
                </para>
            </note>
            <para>
                There is also a centralized memcached based Cache backend available for
purchase from OTRS Group.
            </para>
        </section>

    </section>


    <section id="performance-tuning-database">
        <title>База данных</title>
        <para>
        Решения зависят от используемой базы данных. Изучайте документацию к
используемой базе данных или же обратитесь за помощью к администратору.
        </para>

        <section id="performance-tuning-database-mysql">
            <title>MySQL</title>
            <para>
            Если для MySQL-таблиц используется MyISAM (а по умолчанию так и есть) и из
таблицы была удалена большая часть данных, или же производилось множество
действий над таблицей, которая содержит строки переменной длины (таблицы,
которые содержат поля типов  VARCHAR, BLOB или TEXT), то нужно
дефрагментировать файл (таблицу), или другими словами выполнить команду
"оптимизировать".
            </para>
            <para>
            Нужно попытаться сделать это, если сервер mysqld использует много
процессорного времени. Оптимизация таблиц ticket_history и article (см
Сценарий ниже).
            </para>

            <para>
            <screen><![CDATA[
shell> mysql -u user -p database
mysql> optimize table ticket;
mysql> optimize table ticket_history;
mysql> optimize table article;
            ]]></screen>
            </para>

            <para>
            <emphasis>Сценарий: Оптимизация таблиц базы данных.</emphasis>
            </para>

        </section>

        <section id="performance-tuning-database-postgresql">
            <title>PostgreSQL</title>
            <para>
            PostgreSQL is best tuned by modifying the
<filename>postgresql.conf</filename> file in your PostgreSQL data
directory. For advice on how to do this, reference the following articles:
            </para>

            <para>
                <itemizedlist>
                    <listitem>
                        <para>
                        <ulink url="http://www.revsys.com/writings/postgresql-performance.html">
<citetitle>http://www.revsys.com/writings/postgresql-performance.html</citetitle>
</ulink>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                        <ulink url="http://varlena.com/GeneralBits/Tidbits/perf.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/perf.html</citetitle>
</ulink>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                        <ulink url="http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html</citetitle>
</ulink>
                        </para>
                    </listitem>
                </itemizedlist>
            </para>

            <para>
            Если производительность остается на неудовлетворительном уровне, мы
предлагаем вам присоединится к спискам рассылки "PostgreSQL Performance"  (
<ulink
url="http://www.postgresql.org/community/lists/">http://www.postgresql.org/community/lists/</ulink>
) и задавать вопросы именно там. Люди в этом списке рассылке очень
дружелюбны а всегада постараются вам помочь.
            </para>
        </section>

    </section>

    <section id="performance-tuning-webserver">
        <title>Веб-сервер</title>
        <para>
        Конечно же нужно использовать mod_perl 2.0 ( <ulink
url="http://perl.apache.org/"><citetitle>http://perl.apache.org/</citetitle></ulink>
). Он быстрее (~ * 100) чем "чистый" cgi. Но он требует больше оперативной
памяти (RAM).
        </para>

        <section id="performance-tuning-webserver-db">
            <title>Предустановленное соединение с базой данных</title>
            <para>
            При запуске веб-сервера можно иметь заранее установленное соединение с базой
данных. Такой подход существенно сэкономит время (см. README.webserver).
            </para>
        </section>

        <section id="performance-tuning-webserver-startup">
            <title>Предварительно загруженные модули  - startup.pl</title>
            <para>
            Чтобы все работало быстрее и занимало меньше памяти используйте сценарий
запуска <filename>scripts/apache2-perl-startup.pl</filename> для
предварительной загрузки/компиляции Perl модулей на сервере с mod_perl
(см. README.webserver).
            </para>
        </section>
        <section id="performance-tuning-webserver-reload">
            <title>Перезагрузка Perl-модулей во время обновления с диска</title>
            <para>
            By default Apache::Reload is used in
<filename>scripts/apache2-httpd.include.conf</filename>. Disable it and you
will get 8% more speed. But remember to restart the web server if you
install any modules via the OTRS Package Manager, or any values in your
SysConfig or in <filename>Kernel/Config.pm</filename>. Important: this would
also mean you can't use the OTRS Package Manager via the web interface, you
need to use the command line variant -
<filename>bin/otrs.PackageManager.pl</filename>.
            </para>
        </section>

        <section id="performance-tuning-webserver-strategy">
            <title>Выбор Правильной Стратегии</title>
            <para>
            Если у вас действительно большая система, более 1 000 новых заявок в день и
больше 40 агентов, то советуем почитать статью "Производительность"  в
Руковдстве пользователя по mod_perl  (<ulink
url="http://perl.apache.org/docs/2.0/user/index.html"><citetitle>http://perl.apache.org/docs/2.0/user/index.html</citetitle></ulink>
).
            </para>
        </section>

        <section id="performance-tuning-webserver-gzip">
            <title>mod_gzip/mod_deflate</title>
            <para>
            Используйте mod_deflate для Apache2, если у вас "слабая" полоса пропускания
. При загрузке html-страницы размером в 45к, mod_gzip/mod_deflate сожмет ее
и страница будет занимать около 7к. Недостатком такого подхода является
дополнительная нагрузка на сервер.
            </para>
        </section>

    </section>

</chapter>
