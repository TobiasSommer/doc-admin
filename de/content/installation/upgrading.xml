<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="upgrading">
    <title>Upgrading OTRS from 4 to 5</title>

    <para>
    These instructions are for people upgrading OTRS from <emphasis>4</emphasis>
to <emphasis>5</emphasis> or from a <emphasis>5</emphasis> to a later
patchlevel release <emphasis>5</emphasis> and applies both for RPM and
source code (tarball) upgrades.
    </para>

    <para>
    If you are running a lower version of OTRS you have to follow the upgrade
path to 4 first
(1.1->1.2->1.3->2.0->2.1->2.2->2.3->2.4->3.0->3.1->3.2->3.3->4)! You need to
perform a full upgrade to every version in between, including database
changes and the upgrading Perl script.
    </para>

    <para>
    Bitte beachten Sie, falls Sie von OTRS 2.2 oder früher upgraden, müssen Sie
einen extra Schritt durchführen; bitte lesen Sie dazu <ulink
url="http://bugs.otrs.org/show_bug.cgi?id=6798">http://bugs.otrs.org/show_bug.cgi?id=6798</ulink>.
    </para>

    <para>
    Within a single minor version you can skip patch level releases if you want
to upgrade. For instance you can upgrade directly from OTRS 5 patchlevel 2
to version 5 patchlevel 6. If you need to do such a "patch level upgrade",
you should skip steps 6, 10, 11, 14, 17 and 18.
    </para>

    <para>
    Es wird empfohlen zuerst ein Test-Update auf einem seperaten Testsystem
durchzuführen
    </para>

    <section role="NotInToc">
        <title>Schritt 1: Stoppen Sie alle relevanten Dienste.</title>

        <para>
        Please make sure there are no more running services or cron jobs that try to
access OTRS.  This will depend on your service configuration, here is an
example: <screen><![CDATA[
shell> /etc/init.d/cron stop
shell> /etc/init.d/postfix stop
shell> /etc/init.d/apache stop
            ]]></screen> Stop OTRS cron jobs and the
scheduler or daemon (in this order) depending on the OTRS version you are
updating from: <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/Cron.sh stop
shell> bin/otrs.Scheduler.pl -a stop
            ]]></screen> or <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/Cron.sh stop
shell> bin/otrs.Daemon.pl stop
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Schritt 2: Sichern Sie alles unter <filename>/opt/otrs/</filename></title>

        <para>
            <itemizedlist>
                <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                <listitem><para><filename>Kernel/Config/GenericAgent.pm</filename> (only for reference, this
file is not needed any more)</para></listitem>
                <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                <listitem><para><filename>var/*</filename></para></listitem>
                <listitem><para>ebenfalls die Datenbank</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Schritt 3: Stellen Sie sicher, dass Sie alles gesichert haben ;-)</title>
        <para></para>
    </section>

    <section role="NotInToc">
    <title>Schritt 4: Installieren Sie das neue Release (tar oder RPM)</title>

        <section role="NotInToc">
        <title>Schritt 4.1: Mit dem Tarball:</title>

            <screen><![CDATA[
shell> cd /opt
shell> mv otrs otrs-old
shell> tar -xzf otrs-x.x.x.tar.gz
shell> mv otrs-x.x.x otrs
            ]]></screen>

            <section role="NotInToc">
            <title>Wiederherstellen alter Konfiguration Dateien</title>

                <para>
                    <itemizedlist>
                        <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                        <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                    </itemizedlist>
                </para>
            </section>

            <section role="NotInToc">
                <title>Wiederherstellung TicketCounter.log</title>

                <para>
                    Damit OTRS mit der richtigen Ticketnummer weiter arbeitet, stellen Sie die
Datei <filename>TicketCounter.log</filename> in
<filename>$OTRS_HOME/var/log/</filename> wieder her. Das ist vorallem dann
wichtig, wenn Sie inkrementelle Ticketnummern verwenden.
                </para>
            </section>

            <section role="NotInToc">
                <title>Wiederherstellung article data</title>

                <para>
                    If you configured OTRS to store article data in the filesystem you have to
restore the <filename>article</filename> folder to
<filename>/opt/otrs/var/</filename> or the folder specified in the
SysConfig.
                </para>
            </section>

            <section role="NotInToc">
                <title>Setzen Sie die Datei-Berechtigungen.</title>

                <para>
                Führen Sie <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.SetPermissions.pl
                ]]></screen> mit den benötigten
Berechtigungen für Ihr System aus. Zum Beispiel:

                <itemizedlist>
                <listitem>
                    <para>Webserver der als OTRS user läuft: <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=otrs
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver der als wwwrun User läuft (z.B.: SUSE): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=wwwrun
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver der als apache User läuft: (z.B.: Red Hat, CentOS): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=apache
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver der als www-data User läuft (z.B.: Debian, Ubuntu): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=www-data
                ]]></screen>
                    </para>
                </listitem>
                </itemizedlist>

                </para>
            </section>
        </section>

        <section role="NotInToc">
            <title>Schritt 4.2: Mit RPM</title>
            <para>
            <screen><![CDATA[
shell> rpm -Uvh otrs-x.x.x.-01.rpm
            ]]></screen>  In diesem Fall stellt das RPM-Update
die alten Konfigurationsdateien automatisch wieder her.
            </para>
        </section>
    </section>

    <section role="NotInToc">
        <title>Schritt 5: Überprüfung benötigter Perl-Module</title>

        <para>
        Verify that all needed Perl modules are installed on your system and install
any modules that might be missing.  <screen><![CDATA[
shell> /opt/otrs/bin/otrs.CheckModules.pl
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Schritt 6: Anwenden der Datenbankänderungen</title>

        <section role="NotInToc">
            <title>Schritt 6.1: Datenbankschema-Update</title>

            <section role="NotInToc">
            <title>MySQL:</title>

                <note>
                    <para>
                        Note: new tables created in the MySQL UPGRADING process will be created with
the default table storage engine set in your MySQL server.  In MySQL 5.5 the
new default type is <literal>InnoDB</literal>.  If existing tables,
e.g. "users", have the table storage engine e.g. <literal>MyISAM</literal>,
then an error will be displayed when creating the foreign key constraints.
In this case we recommend to switch all tables to <literal>InnoDB</literal>
with the console command <command>bin/otrs.Console.pl
Maint::Database::MySQL::InnoDBMigration</command>.
                    </para>
                </note>

                <para>
                    Any problems with regards to the storage engine will be reported by the
<filename>bin/otrs.Console.pl Maint::Database::Check</filename> command, so
please run it to check for possible issues.  <screen><![CDATA[
shell> cd /opt/otrs/
shell> cat scripts/DBUpdate-to-5.mysql.sql | mysql -p -f -u root otrs
shell> bin/otrs.Console.pl Maint::Database::Check
                    ]]></screen>

                </para>

            </section>
            <section role="NotInToc">
                <title>PostgreSQL:</title>

                <para>
                <screen><![CDATA[
shell> cd /opt/otrs/
shell> cat scripts/DBUpdate-to-5.postgresql.sql | psql --set ON_ERROR_STOP=on --single-transaction otrs otrs
                ]]></screen>
                </para>
            </section>
        </section>

        <section role="NotInToc">
            <title>Schritt 6.2: Datenbank-Migrationsskript</title>

            <para>
            Führen Sie das Migrationsskript (als User <code>otrs</code>, NICHT als
<code>root</code>):<screen><![CDATA[
shell> scripts/DBUpdate-to-5.pl
            ]]></screen> Fahren Sie nicht mit
dem Upgrade-Prozess fort, wenn dieses Skript Fehler anzeigt. Andernfalls
riskieren Sie einen Datenverlust.
            </para>
        </section>
    </section>

    <section role="NotInToc">
        <title>Step 7: Refresh the configuration cache and delete caches</title>

        <para>
        Bitte führen Sie  (als User <code>otrs</code>, <emphasis>nicht</emphasis>
als <code>root</code>): <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.Console.pl Maint::Config::Rebuild
shell> bin/otrs.Console.pl Maint::Cache::Delete
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 8: Restart your services</title>

        <para>
        Zum Beispiel (hängt von Ihren verwendeten Services ab): <screen><![CDATA[
shell> /etc/init.d/apache start
shell> /etc/init.d/postfix start
shell> /etc/init.d/cron start
        ]]></screen> Nun können Sie sich in Ihr System einloggen.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 9: Check installed packages</title>

        <note>
            <para>
                The OTRS packages of 4 are NOT compatible with OTRS 5, so you have to
perform a package upgrade!
            </para>
        </note>
        <para>
            Die folgenden Pakete werden nach einem Upgrade automatisch deinstalliert
(wenn sie zuvor installiert waren):
            <itemizedlist>
                <listitem><para>OTRSGenericInterfaceMappingXSLT</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 10: Configure NodeIDs (only for multi-frontend clustered setups)</title>

        <note>
            <para>
                This step is only needed if you have a clustered setup with several frontend
machines.
            </para>
        </note>
        <para>
            From OTRS 5 on, every frontend server needs to have its own unique
<literal>NodeID</literal>.  This defaults to <literal>1</literal> and thus
does not need to be configured for single-frontend setups. If you have more
than one machine, each machine needs to have this value set to a unique
value between <literal>1</literal> and <literal>999</literal>. This
configuration needs to be done in the file
<filename>Kernel/Config.pm</filename>: <screen><![CDATA[
$Self->{'NodeID'} =  '2';   # assign a unique value for every frontend server
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 11: Check follow-up detection configuration</title>

        <para>
            The follow-up detection settings were reorganized. Now OTRS searches by
default in email subject and references to detect follow-ups. Please check
in AdminSysConfig <literal>Ticket</literal> -&gt;
<literal>Core::PostMaster</literal> if you need to make any changes to the
follow-up detection configuration (for example to search in body,
attachments or raw email content).
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 12: Start the OTRS Daemon</title>

        <para>
            The new OTRS daemon is responsible for handling any asynchronous and
recurring tasks in OTRS.  What has been in cron file definitions previously
is now handled by the OTRS daemon, which is now required to operate
OTRS. The daemon also handles all GenericAgent jobs and must be started from
the <literal>otrs</literal> user.  <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
            ]]></screen>

        </para>
    </section>

    <section role="NotInToc">
        <title>Step 13: Update and activate cron jobs</title>

        <para>
            There are two default OTRS cron files in
<filename>/opt/otrs/var/cron/*.dist</filename>, and their purpose is to make
sure that the OTRS Daemon is running.  They need to be activated by copying
them without the ".dist" filename extension.  <screen><![CDATA[
shell> cd /opt/otrs/var/cron
shell> for foo in *.dist; do cp $foo `basename $foo .dist`; done
            ]]></screen> To schedule these cron jobs on your system, you can use the script
<filename>Cron.sh</filename> with the <literal>otrs</literal> user.
<screen><![CDATA[
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>
        <para>
            Please note that if you had any custom cron jobs, you should consider moving
them to SysConfig (<literal>Daemon</literal> -&gt;
<literal>Daemon::SchedulerCronTaskManager::Task</literal>)  to have them
executed by the OTRS daemon as well.  You might also need to adapt your
custom scripts, because now most OTRS commands are managed by
<filename>bin/otrs.Console.pl</filename> instead of single scripts.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 14: Review your ticket notifications</title>
        <para>
            With OTRS 5 ticket notifications are configured differently than in previous
versions.  They are now part of the "Event Notifications" that were
previously available as well (now called just "Ticket Notifications"). Your
existing ticket notifications have been migrated into the list of ticket
notifications, but deactivated. You have also received the new default
ticket notifications, active by default.
        </para>
        <para>
            In case you did not modify the old ticket notifications you don't have to do
anything. If you have made local modifications or translations, you have two
choices: a) you can migrate your modifications to the new ticket
notifications (recommended) or b) you can deactivate the new notifications
and activate the old notifications again.
        </para>
        <para>
            Please also review the escalation notification recipient settings and see if
they match with your expectations (agents who have the ticket in one of
their custom queues vs. all agents with read permissions).  This was
configured via a setting in the file
<filename>Kernel/Config/GenericAgent.pm</filename> (now obsolete) previously
and can now be controlled via the GUI for each notification separately.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 15: Update system registration (optional)</title>
        <para>
            If the system is already registered with OTRS Group, it is strongly
recommended to update the registration information at this time. This will
update the registered version of the system (among other changes) in the
OTRS Group records, in order to get much accurate information from the cloud
services.
        </para>
        <para>
            If you don't update the registration information manually, it will be done
automatically on a regular basis, but this could happen some hours or days
after. During this period it might be possible to get wrong information from
cloud services like <emphasis role="bold">OTRS Business Solution™</emphasis>
updates.
        </para>
        <para>
            <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.Console.pl Maint::Registration::UpdateSend --force
shell> bin/otrs.Console.pl Maint::Cache::Delete
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 16: Migrate custom Perl based GenericAgent jobs (optional)</title>
        <para>
            This is only relevant if you had any custom GenericAgent jobs in Perl OTRS 4
configuration files such as
<filename>Kernel/Config/GenericAgent.pm</filename> that cannot be handled
with the regular ticket notifications.  Such jobs now need to be registered
as OTRS Daemon cron tasks in the SysConfig (<literal>Daemon</literal> -&gt;
<literal>Daemon::SchedulerCronTaskManager::Task</literal>), in order to be
executed on a regular basis.
        </para>
        <para>
            There are 5 settings in the SysConfig prepared for this purpose
(<literal>Daemon::SchedulerCronTaskManager::Task###GenericAgentFile1</literal>
to
<literal>Daemon::SchedulerCronTaskManager::Task###GenericAgentFile5</literal>).
If more settings are needed they can be added in a custom SysConfig setting
file.
        </para>
        <para>
            Please replace "&lt;ModuleName&gt;" with the file that contains the custom
GenericAgent jobs configuration,
e.g. <literal>Kernel::Config::GenericAgent</literal> for the file:
<filename>Kernel/Config/GenericAgent.pm</filename>, set the schedule to
match the periodicity as it was executed before, mark the setting as active
and save the changes.
        </para>
        <note>
            <para>
                To get more information about other parameters that can be used while
running the GenericAgent jobs, please execute: <screen><![CDATA[
shell> bin/otrs.Console.pl Maint::GenericAgent::Run --help
            ]]></screen>
            </para>
        </note>
    </section>

    <section role="NotInToc">
        <title>Step 17: Setup bash autocompletion (optional)</title>
        <para>
            All regular OTRS command line operations now happen via the OTRS Console
interface <filename>bin/otrs.Console.pl</filename>. This provides an auto
completion for the bash shell which makes finding the right command and
options much easier.
        </para>
        <para>
            You can activate the bash autocompletion by installing the package
<literal>bash-completion</literal>.  It will automatically detect and load
the file <filename>/opt/otrs/.bash_completion</filename> for the
<literal>otrs</literal> user.
        </para>
        <para>
            After restarting your shell, you can just type
<filename>bin/otrs.Console.pl</filename> followed by TAB, and it will list
all available commands. If you type a few characters of the command name,
TAB will show all matching commands. After typing a complete command, all
possible options and arguments will be shown by pressing TAB.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 18: Review ticket action screen configurations (optional)</title>
        <para>
            Some ticket action screens like "Note" had default subjects in OTRS 4
(configurable via SysConfig,
<literal>Ticket::Frontend::AgentTicketNote###Subject</literal> in this
case). These default subjects have been removed to reduce the amount of
potentially redundant/meaningless data. You might want to re-add them if
they are mandatory for you.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 19: Well done!</title>
        <para></para>
    </section>
</section>
