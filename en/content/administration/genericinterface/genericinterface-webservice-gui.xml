<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="webservice_gui">
    <title>Web Service Graphical Interface</title>
    <para>
        The web service graphical user interface (GUI) is a tool that allows to construct
        complex web service configurations in a user friendly and convenient interface. It allows to:
    </para>
    <para>
        <itemizedlist>
            <listitem>
                <para>
                    Create and Delete web services.
                </para>
            </listitem>
            <listitem>
                <para>
                    Import and Export configurations (in YAML file format) for existing web
                    services.
                </para>
            </listitem>
            <listitem>
                <para>
                    View, Revert and Export old configurations for existing web services in the
                    Web Service History screen.
                </para>
            </listitem>
            <listitem>
                <para>
                    Track all communication logs for each web service in the Debugger screen.
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <section id="webservice_gui_overview">
        <title>Web Service Overview</title>
        <para>
            The "Web Services" link in the main screen of Admin Interface (in the System
            Administration box) leads to the web services overview screen, where you are able to
            manage your web service configurations. You can add new web services or change the
            configuration of the existing ones from this screen.
        </para>
        <para>
            Every web service configuration screen has in the upper part of the screen a
            "bread crumbs" style navigation path. This navigation path is useful to know exactly in
            which part of the web service configuration we are, and also enables the user to jump
            back to any part of the configuration process at any time (this action will not save
            any changes).
        </para>
        <note>
            <para>
                To create a new web service, press the button "Add web service", and provide the
                required information.
            </para>
        </note>
        <para>
            <figure>
                <title>Web services overview</title>
                <screenshot>
                     <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-overview.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                </screenshot>
            </figure>
        </para>
    </section>

    <section id="webservice_gui_add">
        <title>Web Service Add</title>
        <para>
            The only required field in this part is the web service "Name" that needs to be unique
            in the system and can not be left empty. Other fields are also necessary for the
            configuration like the "Debug Threshold" and "Validity" but these fields are already
            populated with the default value for each list.
        </para>
        <para>
            The default value for "Debug Threshold" is "debug". When configured in this manner all
            communication logs are registered in the database. Each subsequent Debug Threshold
            value is more restrictive and discards communication logs of lower order than the one
            set in the system.
        </para>
        <para>
            <itemizedlist>
                <title>Debug Threshold levels (from lower to upper)</title>
                <listitem>
                    <para>
                        Debug
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Info
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Notice
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Error
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            It is also possible to define the network transport protocol for "OTRS as
            Provider" and "OTRS as requester".
        </para>
        <para>
            Click on the "Save" button to register the new web service in the database or click
            "Cancel" to discard this operation. You will now be returned to the web service
            overview screen.
        </para>
        <para>
            If you already have a web service configuration file in YAML format you can click
            on the "Import web service" button on the left side of the screen. For more information
            on importing web services please check the next section "Web Service Change".
        </para>
        <note>
            <para>
                To change or add more details to a web service, click on the web service name in
                the web service overview screen.
            </para>
        </note>
        <para>
            <figure>
                <title>Web services add</title>
                <screenshot>
                     <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-add.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                </screenshot>
            </figure>
        </para>
    </section>

    <section id="webservice_gui_change">
        <title>Web Service Change</title>
        <para>
            On this screen you have a complete set of functions to handle every part of a web
            service. On the left side in the action column you can find some buttons that allows
            you to perform all possible actions on a web service:
        </para>
        <para>
        <itemizedlist>
            <listitem>
                <para>
                    Clone web service.
                </para>
            </listitem>
            <listitem>
                <para>
                    Export web service.
                </para>
            </listitem>
            <listitem>
                <para>
                    Import web service.
                </para>
            </listitem>
            <listitem>
                <para>
                    Configuration History.
                </para>
            </listitem>
            <listitem>
                <para>
                    Delete web service.
                </para>
            </listitem>
            <listitem>
                <para>
                    Debugger.
                </para>
            </listitem>
        </itemizedlist>
        </para>
        <note>
            <para>
                "Configuration history" and "Debugger" will lead you to different screens.
            </para>
        </note>

        <section id="webservice-clone">
            <title>Web Service Clone</title>
            <para>
                To clone a web service, you need to click on the "Clone web service" button. A
                dialog will be shown where you can use the default name or set a new name for the
                (cloned) web service.
            </para>
            <note>
                <para>
                    <emphasis>Remember </emphasis> that the name of the web service must be unique within
                    the system.
                </para>
            </note>
            <para>Click on "Clone" button to create the web service clone or "Cancel" to close
            the dialog.</para>
            <para>
                <figure>
                    <title>Web service clone</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-clone.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-export">
            <title>Web Service Export</title>
            <para>
                The "Export web service" button gives you the opportunity to dump the configuration
                of the current web service into a YAML file, to download it and to store it on your
                file system. This can be specially useful if you want to migrate the web service
                from one server to another, for example from a testing environment to a production
                system.
            </para>
            <warning>
                <para>
                    All stored passwords in the web service configuration will be exported in plain
                    text format.
                </para>
            </warning>
            <para>
                Right after clicking the "Export web service" button a save dialog of your
                browser will appear, just like when you click on a file download link on a web page.
            </para>
            <note>
                <para>
                    Each browser on each operating system has its own save dialog screen and style.
                    Depending on the browser and its configuration it is possible that no dialog is
                    shown and the file is saved to a default directory on your file system. Please
                    check your browser documentation for more specific instructions if needed.
                </para>
            </note>
            <para>
                <figure>
                    <title>Web services export</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-export.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-import">
            <title>Web Service Import</title>
            <para>
                A valid web service configuration YAML file is required to use the import web
                service feature. Click on the "Import web service" button, browse for the
                configuration file or provide the complete path in the input box.
            </para>
            <para>
                Click "Import" button to create a new web service from a file or "Cancel"  to close
                the dialog.
            </para>
            <note>
                <para>
                    The web service name will be taken from the configuration file name (e.g. if the
                    file name is MyWebservice.yml the resulting web service will be named
                    MyWebservice). If a web service is registered in the system with the same name
                    as the web service that you want to import, the system will lead you to the
                    web service change screen to let you change the name of the imported web
                    service.
                </para>
            </note>
            <para>
                <figure>
                    <title>Web services import</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-import.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-history">
            <title>Web Service History</title>
            <para>
                Every change to the web service configuration creates a new entry in the web service
                history (as a journal). The web service history screen displays a list of all
                configuration versions for a web service. Each row (version) in the "Configuration
                History List" represents a single revision in the web service history.
            </para>
            <para>
                Click on one of the rows to show the whole configuration as it was on that
                particular date / time. The configuration will be shown in the "History details"
                section of this screen. Here you are also able to export the selected web
                service configuration version or to restore that version into the current
                web service configuration.
            </para>
            <para>
                The "Export web service configuration" behaves exactly as the "Export web service"
                feature in the web service change screen. For more information refer to that
                section.
            </para>
            <para>
                If changes to the current web service configuration do not work as expected and
                it is not easy to revert the changes manually, you can click on the "Revert web
                service configuration" button. This will open a dialog to ask you if you are sure
                to revert the web service configuration. Click "Revert web service configuration"
                in this dialog to replace the current configuration with the selected version, or
                click "Cancel" to close the dialog.
            </para>
            <warning>
                <para>
                    Remember that any passwords stored in the web service configuration will be
                    exported in plain text format.
                </para>
                <para>
                    Please be careful when you restore a configuration because this process is
                    irreversible.
                </para>
            </warning>
            <para>
                <figure>
                    <title>Web service history</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-history.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-delete">
            <title>Web Service Delete</title>
            <para>
                Sometimes it is necessary to delete a web service completely.
                To do this you can press on the "Delete web service" button and a new dialog will
                appear asking for confirmation.
            </para>
            <para>
                Click on "Delete" to confirm the removal of the web service or on "Cancel" to close
                the dialog.
            </para>
            <warning>
                <para>
                    Deleting a web service can't be undone, please be careful when deleting a web
                    service.
                </para>
             </warning>
            <para>
                <figure>
                    <title>Web service delete</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-delete.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-debugger">
            <title>Web Service Debugger</title>
            <para>
                The Debugger stores the log of a web service. In the debugger screen you can track
                all the web service communications for either provider or requester types.
            </para>
            <para>
                When this screen is shown the request list starts to load. After the list is
                fully filled you can choose one of the rows (that means a communication sequence) to
                check its details. This details will appear in a box below.
            </para>
            <para>
                You can narrow the communication list using the filter on the right part of the
                screen. You can filter by:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Communication type (provider or requester)
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Date: before and / or after a particular date
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The remote IP Address
                    </para>
                </listitem>
                <listitem>
                    <para>
                        A combination of all
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                After filter settings are set, push the "Refresh" button and a new list will be
                displayed meeting your search criteria.
            </para>
            <note>
                <para>
                    Depending on the search criteria for the filters the new list could return no
                    results.
                </para>
            </note>
            <para>
                On the left part of the screen under the action column you can select  "Go
                back to the web service" or clear the debugger log by pushing the "Clear" button.
                This will open a dialog that ask you to confirm erasing of the log. Click "Clear" in
                the dialog button to perform the action or click on "Cancel" to close this dialog.
            </para>
            <para>
                In the "Request details" section you can see all the details for the selected
                communication. Here you can track the complete flow and check for possible errors or
                confirm success responses.
            </para>
            <para>
                <figure>
                    <title>Web service debugger</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-debugger.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
        </section>

        <section id="webservice-configuration-change">
            <title>Web Service Configuration Change</title>
            <para>
                Returning to the web service change screen, now we are going to review the right
                side of it. Here we have the possibility to modify all the general data for a web
                service such as name, description, debug threshold, etc. Also there are two more
                sections below that allows us to modify specific parameters for communication
                types "OTRS as Provider" and "OTRS as Requester".
            </para>
            <para>
                The web service configuration needs to be saved on each level. This means that if a
                setting is changed, links to other, deeper parts of the configuration will be
                disabled forcing you to save the current configuration level. After saving the disabled
                links will be re-enabled again allowing you to continue with the configuration.
            </para>
            <para>
                On the "OTRS as provider" section it is possible to set or configure the network
                transport protocol. Only network transport back-ends that are registered are shown
                on the list. To configure the network transport click on the "Configure" button.
                It is also possible to add new operations in this box. To do this select one of the
                available operations from the "Add Operation" list. This will lead you to the
                operation configuration screen. After saving the new operation it will be listed in
                the table above.
            </para>
            <para>
                "OTRS as requester" is very similar to the previous one, but instead of "operations"
                you can add invokers here.
            </para>
            <para>
                Click the "Save" button to save and continue configuring the web service, "Save
                and finish" to save and return to the web service overview screen, or "Cancel" to
                discard current configuration level changes and return to web service overview
                screen.
            </para>
            <para>
                <figure>
                    <title>Web services change</title>
                    <screenshot>
                         <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-change.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                    </screenshot>
                </figure>
            </para>
            <note>
                <para>
                    Like the other Generic Interface configuration screens such as Network
                    Transport, Operation, Invoker and Mapping, the initial configuration (add)
                    screen will only present two options: "Save" and "Cancel". If the
                    configuration is re-visited, a new option "Save and Finish" will appear.
                    The behavior of this feature is defined below.
                </para>
                <para>
                    "Save" will store the current configuration level in the database and it will
                    return to the previous screen to review your changes or to configure deeper
                    settings.
                </para>
                <para>
                    "Save and Finish" will store the current configuration level in the database
                    and it will return to the previous screen in the configuration hierarchy (to
                    the immediate upper configuration level).
                </para>
                <para>
                    "Cancel" will discard any configuration change to the current configuration
                    level and will return to the previous screen in the configuration hierarchy.
                </para>
            </note>

            <section id="webservice-provider-network-transport">
                <title>Web Service Provider Network Transport</title>
                <para>
                    In future the list of available network transports will be increased. Currently
                    only "HTTP::SOAP" and "HTTP::REST" transports are available. Each transport has
                    different configuration options to setup and they might use different frontend
                    modules to configure them.
                </para>
                <para>
                    It is quite simple to configure the "HTTP::SOAP" protocol as provider.
                    There are only two settings: "Namespace" and "Maximum message length". These
                    fields are required. The first one is a URI to give SOAP methods a context,
                    reducing ambiguities, and the second one is a field where you can specify the
                    maximum size (in bytes) for SOAP messages that OTRS will process.
                </para>
                <para>
                    <figure>
                        <title>Web service provider network transport (HTTP::SOAP)</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-soap.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
                <para>
                    For "HTTP::REST" the configuration might be a bit more complicated, as it grows
                    dynamically for each configured operation by adding: "Route mapping for
                    Operation '&lt;OperationName&gt;':" and "Valid request methods for Operation
                    '&lt;OperationName&gt;':" settings to the default transport settings
                    "Maximum message length:" and "Send Keep-Alive:"
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Route mapping for Operation '&lt;OperationName&gt;':</para>
                        <para>
                            In this setting a resource path is set. This path must be defined
                            according to the needs of the web service considering that the path in
                            conjunction with the HTTP request method determines the Generic
                            Interface operation to be executed.
                        </para>
                        <para>
                            Path can contain variables in the form of ':&lt;VariableName&gt;' each
                            path string that fits on the position of the variable name will be
                            added to the request payload using the variable name defined in this
                            setting.
                        </para>
                        <para>
                            Examples:
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource/:ID
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1?Param1=One
                                </para>
                                <para>
                                    In both cases ID = 1 will be sent to the operation as part of
                                    the payload. In the second case also Param1 = One will be added,
                                    depending on the HTTP request method other parameters will be
                                    added if they come as a JSON string in the request header.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource/OtherResource/:ID/:Color
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1/Red
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherReosurce/123/Blue?Param1=One
                                </para>
                                <para>
                                    In the first example ID = 1 and Color = Red, while in the second
                                    ID = 123 and Color = Blue.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1?Param1=One
                                </para>
                                <para>
                                    In the first example the part of the path '/OtherResource' is
                                    missing as well as the :Color variable, on the second example
                                    just :Color variable is missing.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Valid request methods for Operation '&lt;OperationName&gt;':</para>
                        <para>
                            The HTTP request methods to determine the operation to use together
                            with the route mapping, possible options: CONNECT, DELETE, GET, HEAD,
                            OPTIONS, PATCH, POST, PUT and TRACE.
                        </para>
                        <para>
                            Totally different operations can share exactly the same mapping path,
                            but the request method must be unique for each operation, in order to
                            determine correctly the operation to use on each request.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>Web service provider network transport (HTTP::REST)</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-rest.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
            </section>

            <section id="webservice-operation">
                <title>Web Service Operation</title>
                <para>
                    The actions that can be performed when you are using OTRS as a provider are
                    called "Operations". Each operation belongs to a controller. Controllers are
                    collections of operations or invokers, normally operations from the same
                    controller need similar settings and share the same configuration dialog. But
                    each operation can have independent configuration dialogs if needed.
                </para>
                <para>
                    Name, Description, Backend, and Mappings are fields that normally appear on
                    every operation, other special fields can appear in non default configuration
                    dialogs to fulfill specific needs of the operation.
                </para>
                <para>
                    Normally there are two mapping configuration sections on each operation, one for
                    the incoming data and another one for the outgoing data. You can choose
                    different mapping types (backends) for each mapping direction, since their
                    configuration is independent from each other and also independent from the
                    operation backend. The normal and most common practice is that the operation
                    uses the same mapping type in both cases (with inverted configuration). The
                    complete mapping configuration is
                    done in a separate screen which depends on the mapping type.
                </para>
                <para>
                    The operation backend is pre-populated and is not editable. You will see this
                    parameter when
                    you choose the operation on the web service edit screen. The field is only
                    informative.
                </para>
                <para>
                    In the left part of the screen on the action column you have the options: "Go
                    back to web service" (discarding all changes since the last save) and "Delete".
                    If you click on the last one, a dialog will open and ask you if you like to
                    remove the operation. Click on "Delete" button to confirm the removal of the
                    operation and its configuration or "Cancel" to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>Web service operation</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-operation.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
            </section>

            <section id="webservice-requester-transport">
                <title>Web Service Requester Network Transport</title>
                <para>
                    The network transport configuration for the requester is similar to the
                    configuration for the provider. For the Requester "HTTP::SOAP" network transport
                    there are more fields to be set.
                </para>
                <para>
                    Apart from the "Endpoint" (URI of the Remote System web service interface to
                    accept requests) and "Namespace" which are required fields, you can also
                    specify:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Encoding (such as utf-8, latin1, iso-8859-1, cp1250, etc) for the SOAP
                            message.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            SOAPAction Header: you can use this to send an empty or filled
                            SOAPAction header. Set to "No" and the SOAPAction header on the SOAP
                            message will be an empty string, or set to "Yes" to send the SOAP action
                            in Namespace#Action format and define the separator (typically "/" for
                            .Net web services and "#" for the REST).
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Authentication: to set the authentication mechanism, set to "-" to not
                            use any authentication or select one from the list and the detail
                            fields will appear.
                        </para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para>
                        Currently only the "BasicAuth" (HTTP) authentication mechanism is
                        implemented. You can decide whether or not to use it depending on the
                        Remote System configuration. If used, you must provide the User Name and the
                        Password to access the remote system.
                    </para>
                </note>
                <warning>
                    <para>
                        If you supply a password for authentication and after you export the web
                        service to a YAML file this password will be revealed and will be written
                        into a plain text string inside the YAML file. Be aware of it and take
                        precautions if needed.
                    </para>
                </warning>
                <para>
                    <figure>
                        <title>Web service requester network transport (HTTP::SOAP)</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-soap.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
                <para>
                    In the case of HTTP::REST, this configuration also grows dynamically depending
                    on the configured invokers by adding "Controller mapping for Invoker
                    '&lt;InvokerName&gt;':" and "Valid request command for Invoker
                    '&lt;InvokerName&gt;':" for each invoke. Authentication and SSL options are
                    similar to the ones in HTTP::SOAP
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Host</para>
                        <para>
                            The host name or IP Address and port of the remote system, if no port is
                            specified, port 80 is used by default.
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Controller mapping for Invoker '&lt;InvokerName&gt;':</para>
                        <para>
                            In this setting a resource path is set. This path must be defined
                            according to the needs of the remote web service and following its
                            definition.
                        </para>
                        <para>
                            Path can contain variables in the form of ':&lt;VariableName&gt;' for
                            each  variable name that matches the current data (to be sent), will be
                            replaced by the corresponding data value. This matched variable names
                            and values will be removed from the current data. Depending on the HTTP
                            request command the remaining data could be sent as a JSON string in the
                            request body or as query parameters within the URI.
                        </para>
                        <para>
                            Examples:
                        </para>
                        <para>
                            For data: Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four.
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para> Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource/:Var1
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource/One</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para> Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                       <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource/:Var1?Param1=:Var2&amp;Var3=:Var3
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource/One?Param1=Two&amp;Var3=Three</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para>Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Valid request command for Invoker '&lt;InvokerName&gt;':</para>
                        <para>
                            This determine the  HTTP request method to use, possible options:
                            CONNECT,  DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT and TRACE. If no
                            command is selected, Default command is used.
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Default command</para>
                        <para>
                            Used as a fall-back for all Invokers without a defined request command.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>Web service provider network transport (HTTP::REST)</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-rest.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
            </section>

            <section id="webservice-invoker">
                <title>Web Service Invoker</title>
                <para>
                    The actions that can be performed when you are using OTRS as a requester are
                    called "Invokers". Each invoker belongs to a controller (controllers are
                    collections of operations or invokers). Usually invokers from the same
                    controller need similar settings and share the same configuration dialogs.
                    Each invoker can have independent configuration dialogs if needed.
                </para>
                <para>
                    Name, Description, Backend, and Mappings are fields that normally appear on
                    every invoker. Additionally  the list of event triggers and other special fields
                    can appear on non default configuration dialogs to fulfill special needs of the
                    invoker.
                </para>
                <para>
                    Normally there are two mapping configuration sections for each invoker, one for
                    the incoming data and another one for the outgoing data. You can choose
                    different mapping types (backends) for each mapping direction, since their
                    configuration is independent from each other and also independent from the
                    invoker backend. The normal and most common practice is that the invoker uses
                    the same mapping type in both cases, with inverted configuration. The complete
                    mapping configuration is done in a separate screen, which depends on the
                    mapping type.
                </para>
                <para>
                    The invoker backend is pre-populated and can not be edited. You will see this
                    parameter when you choose the invoker on the web service edit screen. The field
                    is only informative.
                </para>
                <para>
                    Event triggers are events within OTRS such as "TicketCreate", "ArticleSend",
                    etc. These can act as triggers to execute the invoker. Each invoker needs to
                    have at least one event trigger registered, or the invoker will be useless,
                    because it will never be called. The asynchronous property of the event triggers
                    define if the OTRS process will handle the invoker or if it will be delegated to
                    the OTRS Daemon.
                </para>
                <note>
                    <para>
                        The OTRS Daemon is a separate set of process that executes tasks in the
                        background. Using this the OTRS process itself will not be affected if the
                        Remote System takes a long time to respond, if it is not available or if
                        there are network problems. If you don't use the OTRS Daemons using web
                        services can make OTRS slow or non-responsive. Therefore it is highly
                        recommend to use asynchronous event triggers as often as possible.
                    </para>
                </note>
                <para>
                    To add an Event trigger, first select the event family from the first list, then
                    the event name from the second list, then set the asynchronous property (if
                    unchecked means that the event trigger will not be asynchronous) and finally
                    click on the plus button. A new event trigger will be created and it will be
                    listed on the invoker "Event Triggers" list.
                </para>
                <para>
                    To delete an Event trigger, simply locate the event trigger to be deleted in the
                    "Event Triggers" list and click on the trash icon at the end of the row. This
                    will open a dialog that asks you if you are sure to delete the event trigger.
                    Click "Delete" to remove the event trigger from the list, or "Cancel" to close
                    the dialog.
                </para>
                <para>
                    In the left part of the screen on the action column you have the options: "Go
                    back to web service" (discarding all changes since the last save) and "Delete".
                    If you click on the last one, a dialog will emerge and ask you if you like to
                    remove the invoker. Click on the "Delete" button to confirm the removal of the
                    invoker and its configuration or "Cancel" to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>Web service invoker</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
            </section>

            <section id="webservice-mapping">
                <title>Web Service Mapping</title>
                <para>
                    There are cases where you need to transform the data from
                    one format to another (map or change data structure), because normally a web
                    service is used to interact with a Remote System, that is highly probable that
                    is not another OTRS system and / or could not understand the OTRS data
                    structures and values. In these cases some or all values have to be changed,
                    and sometimes even the names of the values (keys) or even the
                    complete structure, in order to match with the expected data on the other end.
                    To accomplish this task the Generic Interface Mapping Layer exists.
                </para>
                <para>
                    Each Remote System has it own data structures and it is possible to create new
                    mapping modules for each case (e.g. there is a customized mapping module for
                    SAP Solution Manager shipped with OTRS), but it is not always necessary.
                    The module Mapping::Simple should cover most of the mapping needs.
                </para>
                <note>
                    <para>
                        When Mapping::Simple does not cover all mapping needs for a web service,
                        a new mapping module should be created. To learn more about how to create
                        new mapping modules please consult the OTRS Development Manual.
                    </para>
                </note>
                <para>
                    This module gives you the opportunity to set default values to map for each key
                    or value for the whole communication data.
                </para>
                <para>
                    At the beginning of the screen you will see a general section where you can
                    set the default rules that will apply for all the unmapped keys
                    and values. There are three options available, these options are
                    listed below:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Keep (leave unchanged): doesn't touch the keys or values in any way.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Ignore (drop key/value pair): when this is applied to the
                            key it deletes the key and value, because when a key is deleted then in
                            consequence its associated value is deleted too. When this is
                            applied to the value, only the value is deleted, keeping the key,
                            that now will be associated to an empty value.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            MapTo (use provided key or value as default): all keys and / or values
                            without a defined map rule, will use this as default, when you select
                            this option a new text field will appear to set this default.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Clicking on the "+" button for new key map, will display a new box for a single
                    mapping configuration. You can add as many key mappings as needed. Just click
                    on the "+" button again and a new mapping box will appear below the existing
                    one. From this mapping boxes you can define a map for a single key, with the
                    next options:
                </para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                Exact value(s): the old key string will be changed to a new one if
                                the old key matches exactly.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                Regular expression: the key string will be replaced following a
                                regular expression rule.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    Pressing the new value map "+" button will display a new row for a value map.
                    Here it is also possible to define rules for each value to be mapped with the
                    same options as for the key map (Exact value and Regular expression). You can
                    add as many values to map as needed, and if you want to delete one of them, just
                    click on the "-" button for each mapping value row.
                </para>
                <para>
                    Deleting the complete key mapping section (box) is possible, just push on the
                    "-" button located on the up right corner of each box that you want to delete.
                </para>
                <para>
                    If you need to delete a complete mapping configuration: go back to the
                    corresponding operation or invoker screen, look for the mapping direction that
                    you select before and set its value to "-", and save the configuration to apply
                    changes.
                </para>
                <para>
                    <figure>
                        <title>Web service mapping</title>
                        <screenshot>
                             <graphic fileref="screenshots/administration/genericinterface/genericinterface-webservice-mapping.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
                        </screenshot>
                    </figure>
                </para>
            </section>
        </section>
    </section>
</section>
